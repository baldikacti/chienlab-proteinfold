/*
    * -------------------------------------------------
    *  Unity HPC cluster config file for nf-core
    * -------------------------------------------------
    * https://unity.rc.umass.edu/
    */

params {
  config_profile_description = 'Unity HPC cluster profile provided by nf-core/configs.'
  config_profile_contact = 'Berent Aldikacti (@baldikacti)'
  config_profile_url = 'https://unity.rc.umass.edu/'

  max_memory = 2.TB
  max_cpus = 192
  max_time = 14.d
}

process {
  resourceLimits = [
    cpus: 192,
    memory: 2.TB,
    time: 14.d
  ]
  executor = 'slurm'
  queueSize = 1000
  submitRateLimit = '20sec'
  pollInterval = '30 sec'
  queueStatInterval = '1 min'

  // Selects partition based on process time
  queue = { task.time <= 2.h ? 'cpu-preempt' : 'cpu' }
  clusterOptions = { task.time >= 48.h ? '-q long' : '' }

  withName: 'COLABFOLD_BATCH' {
        // If a process has COLABFOLD_BATCH name submits to gpu queue
        queue = { task.time <= 2.h ? 'gpu-preempt' : 'gpu' }
        clusterOptions = { "--gpus=1" + " --constraint=${task.attempt == 1 ? 'vram23' : (task.attempt == 2 ? 'vram40' : 'vram80') }" }
        containerOptions = '--nv'
    }
}


// Cleans up work directory after successfull run
cleanup = true
// Profile debug can be used to prevent cleanup
profiles {
    unity {
        apptainer {
          enabled = true
          autoMounts = true
          pullTimeout = '120m'
      }
      cleanup = false
    }
}